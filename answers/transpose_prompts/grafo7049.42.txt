python
Copy code
# Define a function that counts the number of crossings between two lists of edges
def count_crossings(edges, list1, list2):
    count = 0
    for i in range(len(edges)):
        for j in range(i+1, len(edges)):
            e1_src, e1_tgt = edges[i]
            e2_src, e2_tgt = edges[j]
            if (list1.index(e1_src) < list1.index(e2_src)) and (list2.index(e1_tgt) > list2.index(e2_tgt)):
                count += 1
            elif (list1.index(e1_src) > list1.index(e2_src)) and (list2.index(e1_tgt) < list2.index(e2_tgt)):
                count += 1
    return count

# Order the nodes in each rank to reduce crossings
for r in ranks:
    if len(ranks[r]) > 1:
        best_order = ranks[r]
        best_count = count_crossings(edges, ranks[r], ranks[r-1])
        for i in range(1, len(ranks[r])):
            new_order = best_order[:]
            new_order[i-1], new_order[i] = new_order[i], new_order[i-1]
            new_count = count_crossings(edges, new_order, ranks[r-1])
            if new_count < best_count:
                best_order = new_order
                best_count = new_count
        ranks[r] = best_order