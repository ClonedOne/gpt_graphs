python
Copy code
# Order nodes in each rank to reduce crossings in the graph drawing
for rank_number, nodes in ranks.items():
    if rank_number == 0:
        continue  # skip the first rank
    best_crossings = float('inf')
    best_nodes_order = nodes
    for i in range(len(nodes)):
        for j in range(i+1, len(nodes)):
            nodes_order = nodes[:i] + [nodes[j]] + nodes[i+1:j] + [nodes[i]] + nodes[j+1:]
            crossings = count_crossings(nodes_order, edges)
            if crossings < best_crossings:
                best_crossings = crossings
                best_nodes_order = nodes_order
    ranks[rank_number] = best_nodes_order
where count_crossings(nodes_order, edges) is a function that counts the number of crossings between edges in edges using the ordering of nodes in nodes_order.