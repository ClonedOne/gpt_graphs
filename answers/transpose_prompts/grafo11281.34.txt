python
Copy code
ranks = {0: [0], 1: [5], 2: [1], 3: [6, 10], 4: [2, 4, 9], 5: [7, 8], 6: [3]}
for rank in range(1, len(ranks)):
    nodes = ranks[rank]
    for i in range(len(nodes)-1):
        for j in range(i+1, len(nodes)):
            transposed = nodes[:]
            transposed[i], transposed[j] = transposed[j], transposed[i]
            crossings = 0
            for e1, (u1, v1) in enumerate(edges):
                for u2, v2 in edges[e1+1:]:
                    if (u1 in transposed[:i] and u2 in transposed[i:j]) and (v1 in transposed[j:] and v2 in transposed[i:j]):
                        crossings += 1
                    elif (v1 in transposed[j:] and v2 in transposed[i:j]) and (u1 in transposed[:i] and u2 in transposed[i:j]):
                        crossings += 1
            if 'best_crossings' not in locals() or crossings < best_crossings:
                best_crossings = crossings
                best_order = transposed
    ranks[rank] = best_order