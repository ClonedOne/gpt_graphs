python
Copy code
from itertools import permutations

edges = [(2, 7), (3, 6), (6, 4), (5, 8), (8, 4), (0, 7), (6, 9), (9, 2), (10, 7), (10, 1)]
ranks = {0: [0], 1: [8, 5], 2: [3, 1], 3: [6, 4, 7], 4: [9], 5: [2]}

for rank in range(1, len(ranks)):
    nodes = ranks[rank]
    best_permutation = nodes
    min_crossings = float('inf')
    for permutation in permutations(nodes):
        node_ordering = {node: i for i, node in enumerate(permutation)}
        crossings = 0
        for i, (source1, target1) in enumerate(edges):
            for source2, target2 in edges[i+1:]:
                if node_ordering[source1] > node_ordering[source2] and node_ordering[target1] < node_ordering[target2]:
                    crossings += 1
        if crossings < min_crossings:
            best_permutation = permutation
            min_crossings = crossings
    ranks[rank] = list(best_permutation)