less
Copy code
ranks = {0: [0],
         1: [8, 5],
         2: [3, 1],
         3: [6, 4, 7],
         4: [9],
         5: [2]}

for rank in range(1, len(ranks)):
    nodes = ranks[rank]
    for i in range(len(nodes)-1):
        for j in range(i+1, len(nodes)):
            crossings = count_crossings(nodes[i], nodes[j], edges, ranks)
            if crossings < min_crossings:
                min_crossings = crossings
                best_i = i
                best_j = j
    ranks[rank][best_i], ranks[rank][best_j] = ranks[rank][best_j], ranks[rank][best_i]

def count_crossings(node1, node2, edges, ranks):
    crossings = 0
    for edge1 in edges:
        for edge2 in edges:
            if edge1 == edge2:
                continue
            s1, t1 = edge1
            s2, t2 = edge2
            if (s1 in ranks[node1] and s2 in ranks[node2] and t1 in ranks[node2] and t2 in ranks[node1]) or \
               (s1 in ranks[node2] and s2 in ranks[node1] and t1 in ranks[node1] and t2 in ranks[node2]):
                crossings += 1
    return crossings