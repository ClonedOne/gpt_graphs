To solve this problem, we need to count the number of edge crossings in a bipartite graph defined by the arrays A and B and the list of edges.

First, let's check the conditions specified in the prompt. Since there is a single edge, we write 0 and stop writing.

Answer: 0

If array A has length 1 or array B has length 1, we also write 0 and stop writing.

Answer: 0

Now we need to consider all the combinations of edge pairs, excluding those with the same first element or the same second element. The remaining pairs are:

[(2, 5), (6, 3)]
[(2, 5), (2, 4)]
[(2, 5), (2, 7)]
[(6, 3), (2, 4)]
[(6, 3), (2, 7)]
[(2, 4), (2, 7)]

For each pair of edges, we need to calculate s1, t1, s2, and t2. For example, for the first pair (2, 5) and (6, 3), we have s1 = 2, t1 = 1, s2 = 0, t2 = 2.

Here are the values for all pairs:

(2, 5) and (6, 3): s1 = 2, t1 = 1, s2 = 0, t2 = 2
(2, 5) and (2, 4): s1 = 2, t1 = 1, s2 = 0, t2 = 3
(2, 5) and (2, 7): s1 = 2, t1 = 1, s2 = 0, t2 = 0
(6, 3) and (2, 4): s1 = 0, t1 = 2, s2 = 2, t2 = 3
(6, 3) and (2, 7): s1 = 0, t1 = 2, s2 = 2, t2 = 0
(2, 4) and (2, 7): s1 = 2, t1 = 3, s2 = 0, t2 = 0

Now we need to exclude the pairs that violate the conditions s1 > s2 and t1 < t2, and s1 < s2 and t1 > t2. After applying these exclusions, we are left with the following pairs:

(2, 5) and (6, 3): s1 = 2, t1 = 1, s2 = 0, t2 = 2
(2, 5) and (2, 7): s1 = 2, t1 = 1, s2 = 0, t2 = 0
(6, 3) and (2, 4): s1 = 0, t1 = 2, s2 = 2, t2 = 3

So we have three pairs of edges that cross each other. Therefore, the answer is 3.