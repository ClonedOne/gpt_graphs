We want to reduce edge crossings on a layered graph drawing.
You are given a  list of directed edges in a layered graph, and a mapping of which nodes are contained in which layer.
Start from layer 0. 
Consider every node in layer 0, and for each node consider its neighbors in the next layer. 
For each node in layer 0, calculate the positions of the neighbors in the next layer. 
Then, sort the nodes in layer 0 based on the median position of their neighbors.
If a number is NaN, then it is equal to 0.
If a node has no neighbors, assign an associated median of 0.
Repeat the process for every layer.
Finally, I want you to write the layers and the nodes in them once more, but the nodes in the layers have to be sorted according to their associated median value.
Like this:
Layer 0: [<sorted nodes in layer 0>]
If node A has an associated median value that is less than the associated median value of node B, then node A must come before node B.

## Input:
Directed edges:
[(0, 1), (3, 4), (5, 4), (0, 6), (0, 5), (0, 3), (3, 2), (0, 7), (0, 8), (1, 9), (5, 10), (6, 10)]
Layer node mapping:
Layer 0: [0]
Layer 1: [1, 6, 5, 3, 7, 8]
Layer 2: [9, 10, 4, 2]

## Answer:
Layer 0: [0]
Layer 1: [1, 7, 8, 6, 5, 3]
Layer 2: [9, 10, 4, 2]

## Input:
Directed edges:
[(0, 6), (6, 1), (7, 3), (4, 7), (3, 8), (8, 5), (2, 9), (10, 2), (0, 10), (10, 4)]
Layer node mapping:
Layer 0: [0]
Layer 1: [6, 10]
Layer 2: [1, 2, 4]
Layer 3: [9, 7]
Layer 4: [3]
Layer 5: [8]
Layer 6: [5]

## Answer:
Layer 0: [0]
Layer 1: [10, 6]
Layer 2: [4, 2, 1]
Layer 3: [7, 9]
Layer 4: [3]
Layer 5: [8]
Layer 6: [5]

## Input:
Directed edges:
[(6, 1), (6, 2), (0, 6), (0, 7), (7, 5), (8, 3), (9, 8), (9, 4), (10, 9), (7, 10)]
Layer node mapping:
Layer 0: [0]
Layer 1: [6, 7]
Layer 2: [1, 2, 5, 10]
Layer 3: [9]
Layer 4: [8, 4]
Layer 5: [3]

## Answer:
Layer 0: [0]
Layer 1: [7, 6]
Layer 2: [10, 5, 2, 1]
Layer 3: [9]
Layer 4: [4, 8]
Layer 5: [3]

## Input:
Directed edges:
[(0, 6), (6, 1), (7, 2), (3, 7), (3, 10), (8, 3), (4, 8), (9, 4), (5, 9), (0, 5)]
Layer node mapping:
Layer 0: [0]
Layer 1: [6, 5]
Layer 2: [1, 9]
Layer 3: [4]
Layer 4: [8]
Layer 5: [3]
Layer 6: [7, 10]
Layer 7: [2]

## Answer:
Layer 0: [0]
Layer 1: [5, 6]
Layer 2: [9, 1]
Layer 3: [4]
Layer 4: [8]
Layer 5: [3]
Layer 6: [7, 10]
Layer 7: [2]

## Input:
Directed edges:
[(0, 7), (7, 1), (2, 6), (2, 5), (5, 3), (8, 4), (3, 8), (1, 2), (9, 5), (1, 9), (7, 10)]
Layer node mapping:
Layer 0: [0]
Layer 1: [7]
Layer 2: [1, 10]
Layer 3: [2, 9]
Layer 4: [6, 5]
Layer 5: [3]
Layer 6: [8]
Layer 7: [4]

## Answer:
Layer 0: [0]
Layer 1: [7]
Layer 2: [1, 10]
Layer 3: [9, 2]
Layer 4: [5, 6]
Layer 5: [3]
Layer 6: [8]
Layer 7: [4]

## Input:
Directed edges:
[(7, 1), (2, 6), (3, 5), (8, 4), (8, 3), (7, 2), (0, 9), (9, 7), (10, 8), (2, 10)]
Layer node mapping:
Layer 0: [0]
Layer 1: [9]
Layer 2: [7]
Layer 3: [1, 2]
Layer 4: [6, 10]
Layer 5: [8]
Layer 6: [4, 3]
Layer 7: [5]

## Answer:
